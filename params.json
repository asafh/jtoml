{"name":"Jtoml","tagline":"TOML Parser for Java","body":"jtoml\r\n=====\r\n\r\n[TOML](https://github.com/mojombo/toml) Parser for Java\r\n\r\nUsing jtoml\r\n----\r\n\r\n## Parsing\r\nThe JToml class has methods for parsing Toml from files, input streams, readers are just strings  \r\njtoml does not need the entire toml in memory while parsing,\r\nbut reads it while parsing only keeping in memory the current line being read\r\n\r\n```java\r\nToml toml = JToml.parseString(\"foo = 42\"); //Parsing a String\r\ntoml = JToml.parse(ExampleTomlTest.class.getResourceAsStream(\"/example.toml\")); //From an input stream\r\ntoml = JToml.parse(new File(\"/example.toml\")); //From a file\r\ntoml = JToml.parse(new StringReader(\"foo = 42\")); // From a reader\r\n```\r\n\r\n## Getting values\r\nParsing a TOML file returns a Toml instance, which is the root keygroup.  \r\nKeyGroups have methods to return local values (directly in this keygroup)\r\nor a relative value (e.g. getting \"y.z.\" from keygroup \"x\" will return the value for \"x.y.z\").  \r\n\r\n```java\r\ntoml.getValue(\"foo\"); // Object\r\ntoml.getString(\"foo\"); // String\r\ntoml.getBoolean(\"foo\"); // Boolean\r\ntoml.getDate(\"foo\"); // Date\r\ntoml.getDouble(\"foo\"); // Double\r\ntoml.getLong(\"foo\"); // Long\r\ntoml.getList(\"foo\"); // List<Object>\r\ntoml.getKeyGroup(\"foo\"); // KeyGroup\r\n\r\ntoml.getLocalValue(\"foo\"); // returns the value for \"foo\", dots are not allowed\r\ntoml.getLocalXXX(\"foo\"); //....\r\n\r\n```\r\n\r\n## Mapping to POJO\r\nYou can create a POJO class instance, filling it with values for a given keygroup.  \r\nAny field that isn't a type of String, Date, List, Boolean, Double, Long is assumed to be a nested POJO type and is\r\nrecursively mapped (it's value in the toml should be a keygroup).\r\n```toml\r\n[foo]\r\nstringKey=\"a\"\r\nlongKey=42\r\ndoubleKey=13.37\r\nbooleanKey=true\r\nlistKey=[1,2,3]\r\n[foo.bar]\r\nbazz=\"Hello\"\r\ndummy=459\r\n```\r\nRetrieving \r\n```java\r\nclass Foo {\r\n\tString stringKey;\r\n\tLong longKey;\r\n\tDouble doubleKey;\r\n\tBoolean booleanKey;\r\n\tList<Object> listKey;\r\n\tBar bar;\r\n\tBoolean awesome;\r\n}\r\nclass Bar {\r\n  String bazz;\r\n  Long dummy;\r\n}\r\nFoo foo = toml.getKeyGroup(\"foo\").asObject(Foo.class);\r\n```\r\n\r\nLicense\r\n-----\r\n[Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0)\r\n","google":"UA-38594778-2","note":"Don't delete this file! It's used internally to help with page regeneration."}